import{createRequire as e}from"module";var r={874:(e,r,t)=>{e.exports=t.p+"ec15c81254e49cbe8c57.js"}};var t={};function __nccwpck_require__(e){var o=t[e];if(o!==undefined){return o.exports}var i=t[e]={exports:{}};var a=true;try{r[e](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete t[e]}return i.exports}__nccwpck_require__.m=r;(()=>{__nccwpck_require__.d=(e,r)=>{for(var t in r){if(__nccwpck_require__.o(r,t)&&!__nccwpck_require__.o(e,t)){Object.defineProperty(e,t,{enumerable:true,get:r[t]})}}}})();(()=>{__nccwpck_require__.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r)})();(()=>{var e;if(typeof import.meta.url==="string")e=import.meta.url;if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/");__nccwpck_require__.p=e})();if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=new URL(".",import.meta.url).pathname.slice(import.meta.url.match(/^file:\/\/\/\w:/)?1:0,-1)+"/";(()=>{__nccwpck_require__.b=new URL("./",import.meta.url);var e={179:0}})();var o={};(()=>{__nccwpck_require__.d(o,{V:()=>beep});const r=e(import.meta.url)("util");const t=e(import.meta.url)("child_process");const i=(0,r.promisify)(t.exec);async function execute(e,r){const o=e.endsWith("&");if(r&&r.unref)(0,t.exec)(e).unref();else if(o)(0,t.spawn)(e,{stdio:"inherit",shell:true});else{const{stdout:r,stderr:t}=await i(e);if(t.toString())throw new Error(t.toString());return r.toString()}return"0"}async function sleep(e){return new Promise((r=>setTimeout(r,e)))}function log(e,r){const t=e&&e.toLowerCase?e.toLowerCase():"";const o=t=="ok"||t=="info"?"[32m%s[0m":t=="error"?"[31m%s[0m":"";console.log(o,r)}function printMatrix(e){return e.map((e=>e.toString())).reduce(((e,r)=>e+"\n"+r))}function logOK(e){console.log("[32m%s[0m",e)}function logError(e){console.log("[31m%s[0m",e)}const a=e(import.meta.url)("url");const n=a.fileURLToPath(new URL(__nccwpck_require__(874),__nccwpck_require__.b));const _=`aplay -q ${n}/beep.wav`;function beep(e="."){const fn=async e=>{try{await sleep(100);for(let r of e.split("")){if(r!==" "){try{await execute(_)}catch(e){console.error(e)}await sleep(100)}else await sleep(200)}}catch(e){console.log(e)}};fn(e).catch((e=>{}))}})();var i=o.V;export{i as beep};